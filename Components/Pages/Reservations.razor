@page "/reservations"
@using Assignment2

<style>
    .maincontent
    {
        margin:0;
        display: flex;
        flex-wrap:wrap;
    }
    .maincontent > div
    {
        flex-grow:1;
    }
    .maincontent > div:nth-child(3)
    {
/*         background-color:lightblue; */
        width:100%;

    }
    .maincontent > div:nth-child(2)
    {
        text-align:right;
        position:relative;
        margin-right:0;
/*         background-color:lightcoral; */
    }
    .maincontent > div:nth-child(1)
    {
/*         background-color:lightyellow; */
    }
    .maincontent div:nth-child(2) > input
    {
        margin-right:0;
        margin:auto;
    }
   
    h3
    {
        text-align:center;
    }

    .reserve
    {
        display: flex;
        flex-direction: row;
        justify-content:flex-end;
        align-items: flex-end;
    }
    .reserve > form > button
    {
        display:block;
        margin:auto;
        margin-left:53%;
        margin-top:1em;
        background-color:royalblue;
        color:white;
/*         border-radius:5px; */
    }
    .reserve > form > input
    {
/*         border-radius:5px; */
        width:300px;
    }
    .reserve > form > select
    {
/*         border-radius:5px; */
        width:300px;
    }
    
    .flightfinder
    {
        text-align:right;
        margin:50px;
    }
    .flightfinder > form > div > input
    {
        width:85%;
/*         border-radius:5px; */
    }

    .flightfinder > form > button {
        display: block;
        margin: auto;
        margin-top: 1em;
        background-color: royalblue;
        color: white;
        border-radius:5px;
    }
</style>

<div class="maincontent">
        <div class="reservations">
            <h3>Reservations</h3>
            @foreach(Reservation res in foundResList)
            {
                <p>@Reservation.DisplayReservation(res)</p>
            }
        
        </div>

        <div class="reserve">
            <form>
                <h3>Update Reservation</h3>
                <label for="code">Code:</label>
                <input type="text" name="code" @bind="@reservationCode" /><br />

                <label for="flight">Flight:</label>
            <input type="text" name="flight" @bind="@flightCode" /><br />

                <label for="airline">Airline:</label>
            <input type="text" name="airline" @bind="@airlineName" /><br />

                <label for="cost">Cost:</label>
            <input type="number" name="cost" @bind="@cost" /><br />

                <label for="name">Name:</label>
                <input type="text" name="name" @bind="@customerName" /><br />

                <label for="citizenship">Citizenship:</label>
                <input type="text" name="citizenship" @bind="@citizenship"/><br />

                <label for="status">Status:</label>
            <select name="status" @bind="@status">
                    <option value="Active">Active</option>
                <option value="Inactive">Inactive</option>
                </select>

            <button type="submit" @onclick="PassModifyReservation">Update</button>
            </form>            
        </div>
    <div class="flightfinder">
        <h3>Reservation Finder</h3>
        <form>
            <div>
                <label for="code">Code:</label>
                <input type="text" name="code" @bind="reservationCodeFind"/><br />
            </div>
            <div>
                <label for="airline">Airline:</label>
                <input type="text" name="airline" @bind="airlineNameFind"/><br />
            </div>
            <div>
                <label for="name">Name:</label>
                <input type="text" name="name" @bind="customerNameFind"/><br />
            </div>

            <button type="button" @onclick="PassReservationFinder">Find Reservations</button>
        </form>
    </div>
</div>
@code {
    private string reservationCode { get; set; }
    private string flightCode { get; set; }
    private string airlineName { get; set; }
    private double cost { get; set; }
    private string customerName { get; set; }
    private string citizenship { get; set; }
    private string status { get; set; } = "active";

    private string reservationCodeFind { get; set; }
    private string airlineNameFind { get; set; }
    private string customerNameFind { get; set; }
    private List<Reservation> foundResList { get; set; } = new List<Reservation>();

    private void PassModifyReservation()
    {
        try
        {
            ReservationManager.ModifyReservation(reservationCode, customerName, citizenship, status);
        }
        catch (NameNullException e)
        {

        }
        catch (CitizenshipNullException e)
        {

        }
        catch (Exception e)
        {

        }
         
        
    }

    private void PassReservationFinder()
    {
        foundResList = ReservationManager.FindReservation(reservationCodeFind, airlineNameFind, customerNameFind);        
    }

    // private void PassUpdateFields(ChangeEventArgs e)
    // {
    //     flightCode = e.Value.ToString();
    //     UpdateFields();
    // }

    // private void UpdateFields()
    // {
    //     Reservation foundResPop = Reservation.FindReservation(flightCode, "", "");
    //     if (foundFlightPop != null)
    //     {
    //         flightCode = found
    //         airlineName = foundFlightPop.AirlineName;
    //         weekDate = foundFlightPop.WeekDate;
    //         time = foundFlightPop.Time;
    //         cost = foundFlightPop.Cost;
    //     }
    // }
}

